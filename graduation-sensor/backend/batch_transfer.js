const mysql = require('mysql2/promise');

const BATCH_SIZE = 150; // batch size

(async () => {
  try {
    const db = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '1234',
      database: 'educated'
    });

    console.log('üöÄ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    // 1Ô∏è‚É£ ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å graduates ‚Üí postdata_graduates
    await db.query('INSERT INTO postdata_graduates (student_id, name, rfid, queue_order, status, order_no, created_at, updated_at) SELECT student_id, name, rfid, queue_order, status, order_no, created_at, updated_at FROM graduates');
    console.log(`‚úÖ ‡∏¢‡πâ‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å graduates ‚Üí postdata_graduates ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);

    // 2Ô∏è‚É£ ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô graduates
    await db.query('TRUNCATE TABLE graduates');
    console.log('üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô graduates ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');

    // 3Ô∏è‚É£ ‡∏î‡∏∂‡∏á batch ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡∏à‡∏≤‡∏Å predata_graduates ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤
    const [allPredata] = await db.query('SELECT * FROM predata_graduates ORDER BY id ASC');
    console.log(`üîπ ‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ${allPredata.length} ‡∏Ñ‡∏ô‡πÉ‡∏ô predata_graduates`);

    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å batch ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
    const batchToInsert = allPredata.slice(0, BATCH_SIZE); // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô index ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î order_no ‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
    let orderCounter = 1;
    const batchData = batchToInsert.map(row => [
      row.student_id,
      row.name,
      row.rfid,
      row.queue_order,
      row.status,
      orderCounter++
    ]);

    // 4Ô∏è‚É£ ‡∏ô‡∏≥ batch ‡πÄ‡∏Ç‡πâ‡∏≤ graduates
    await db.query(
      'INSERT INTO graduates (student_id, name, rfid, queue_order, status, order_no) VALUES ?',
      [batchData]
    );
    console.log(`‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ batch ‡∏ñ‡∏±‡∏î‡πÑ‡∏õ ${batchData.length} ‡∏Ñ‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á graduates ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);

    await db.end();
    console.log('üéâ ‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå');
  } catch (err) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
  }
})();
