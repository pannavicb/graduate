const mysql = require('mysql2/promise');

const firstNames = ['‡∏™‡∏°‡∏ä‡∏≤‡∏¢','‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á','‡∏≠‡∏ô‡∏±‡∏ô‡∏ï‡πå','‡∏™‡∏∏‡∏î‡∏≤','‡∏õ‡∏£‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå','‡∏Å‡∏°‡∏•','‡∏õ‡∏¥‡∏¢‡∏∞','‡∏™‡∏∏‡∏£‡∏µ‡∏¢‡πå','‡πÄ‡∏Å‡∏©‡∏°','‡∏ß‡∏£‡∏£‡∏ì‡∏≤','‡∏à‡∏¥‡∏ï‡∏£‡∏≤','‡∏û‡∏á‡∏©‡πå‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå','‡∏®‡∏¥‡∏£‡∏¥‡∏û‡∏£','‡∏≠‡∏£‡∏ß‡∏£‡∏£‡∏ì','‡∏°‡∏≤‡∏ô‡∏û','‡∏™‡∏≤‡∏¢‡∏ù‡∏ô','‡∏ö‡∏∏‡∏ç‡∏ä‡πà‡∏ß‡∏¢','‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏û‡πá‡∏ç','‡∏ñ‡∏≤‡∏ß‡∏£','‡πÄ‡∏û‡πá‡∏ç‡∏®‡∏£‡∏µ'];
const lastNames = ['‡πÉ‡∏à‡∏î‡∏µ','‡∏ö‡∏∏‡∏ç‡∏°‡∏µ','‡∏ó‡∏≠‡∏á‡∏™‡∏∏‡∏Ç','‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡πå','‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡πå‡∏™‡∏∏‡∏Ç','‡∏ó‡∏≠‡∏á‡πÉ‡∏ö','‡∏ö‡∏∏‡∏ç‡∏ä‡πà‡∏ß‡∏¢','‡∏≠‡∏¢‡∏π‡πà‡∏™‡∏∏‡∏Ç','‡∏™‡∏≤‡∏¢‡∏ó‡∏≠‡∏á','‡∏Ñ‡∏≥‡∏î‡∏µ','‡∏û‡∏π‡∏ô‡∏™‡∏∏‡∏Ç','‡∏ó‡∏≠‡∏á‡∏î‡∏µ','‡∏î‡∏µ‡∏°‡∏≤‡∏Å','‡∏û‡∏á‡∏©‡πå‡πÄ‡∏û‡∏ä‡∏£','‡∏®‡∏£‡∏µ‡∏™‡∏∏‡∏Ç','‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à','‡πÄ‡∏û‡∏ä‡∏£‡∏î‡∏µ','‡∏ä‡∏∑‡πà‡∏ô‡∏à‡∏¥‡∏ï','‡∏™‡∏∏‡∏î‡πÉ‡∏à','‡∏™‡∏∏‡∏Ç‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏¥‡πå'];

function randomThaiName() {
  const first = firstNames[Math.floor(Math.random() * firstNames.length)];
  const last = lastNames[Math.floor(Math.random() * lastNames.length)];
  return `${first} ${last}`;
}

function generateStudentId(year, faculty, major, order) {
  return `${String(year).slice(-2)}${String(faculty).padStart(2,'0')}${String(major).padStart(2,'0')}${String(order).padStart(2,'0')}`;
}

(async () => {
  try {
    const db = await mysql.createConnection({
      host: 'localhost',
      user: 'root',
      password: '1234',
      database: 'educated'
    });

    console.log('üöÄ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');

    await db.query('TRUNCATE TABLE predata_graduates');
    console.log('üóëÔ∏è ‡∏•‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');

    const graduates = [];
    let total = 0;

    const years = [2565, 2566, 2567];
    const faculties = [1,2,3,4,5,6];

    for (const year of years) {
      for (const faculty of faculties) {
        for (let major=1; major<=10; major++) {  // 10 ‡∏™‡∏≤‡∏Ç‡∏≤
          for (let order=1; order<=99; order++) {
            if (total >= 5000) break;
            const studentId = generateStudentId(year, faculty, major, order);
            const name = randomThaiName();
            const rfid = `RFID${String(total+1).padStart(10,'0')}`;
            const queueOrder = total + 1;
            const status = '‡∏£‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏±‡∏ö';
            graduates.push([studentId, name, rfid, queueOrder, status]);
            total++;
          }
          if (total >= 5000) break;
        }
        if (total >= 5000) break;
      }
      if (total >= 5000) break;
    }

    await db.query(
      'INSERT INTO predata_graduates (student_id, name, rfid, queue_order, status) VALUES ?',
      [graduates]
    );

    console.log(`‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ${graduates.length} ‡∏Ñ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢`);
    await db.end();
  } catch (err) {
    console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:', err);
  }
})();
